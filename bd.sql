-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admins (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  profile_picture_url text,
  CONSTRAINT admins_pkey PRIMARY KEY (id),
  CONSTRAINT admins_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.announcements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  content text NOT NULL,
  link_url text,
  link_text text,
  is_active boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  icon text,
  theme text DEFAULT 'primary'::text,
  title text,
  CONSTRAINT announcements_pkey PRIMARY KEY (id)
);
CREATE TABLE public.anonymized_candidatures (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  candidature_id uuid NOT NULL UNIQUE,
  ao_id uuid,
  expert_code text,
  tjm_propose integer,
  date_disponibilite date,
  motivation text,
  projets_similaires text,
  dossier_candidature_url text,
  expert_avatar_url text,
  status USER-DEFINED,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone,
  cv_url text,
  CONSTRAINT anonymized_candidatures_pkey PRIMARY KEY (id),
  CONSTRAINT fk_ao FOREIGN KEY (ao_id) REFERENCES public.aos(id),
  CONSTRAINT fk_candidature FOREIGN KEY (candidature_id) REFERENCES public.candidatures(id)
);
CREATE TABLE public.aos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid,
  admin_id uuid,
  title text NOT NULL,
  description text NOT NULL,
  location text,
  tjm_range text DEFAULT '0 â‚¬'::text,
  contract_type text,
  required_skills ARRAY DEFAULT '{}'::text[],
  work_arrangement text,
  duration text,
  experience_level ARRAY,
  candidature_deadline timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  company_name text,
  rejection_reason text,
  status USER-DEFINED NOT NULL DEFAULT 'DRAFT'::ao_status_enum,
  CONSTRAINT aos_pkey PRIMARY KEY (id),
  CONSTRAINT aos_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT aos_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES public.admins(id)
);
CREATE TABLE public.blogs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  admin_id uuid NOT NULL,
  title text NOT NULL,
  content text NOT NULL,
  published_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  status character varying NOT NULL DEFAULT 'draft'::character varying,
  image_url text,
  video_url text,
  tags ARRAY,
  summary text,
  slug text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  author_name text,
  illustration_images_urls ARRAY,
  CONSTRAINT blogs_pkey PRIMARY KEY (id),
  CONSTRAINT blogs_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES public.admins(id)
);
CREATE TABLE public.candidature_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  candidature_id uuid NOT NULL,
  admin_id uuid,
  action text NOT NULL,
  details jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT candidature_logs_pkey PRIMARY KEY (id),
  CONSTRAINT application_logs_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES public.admins(id),
  CONSTRAINT application_logs_candidature_id_fkey FOREIGN KEY (candidature_id) REFERENCES public.candidatures(id)
);
CREATE TABLE public.candidatures (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ao_id uuid NOT NULL,
  expert_id uuid NOT NULL,
  applied_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  motivation text,
  tjm_propose integer,
  date_disponibilite date,
  projets_similaires text,
  motif_refus text,
  linkedin_url text,
  cv_url text,
  dossier_candidature_url text,
  status USER-DEFINED NOT NULL,
  admin_rejection_reason text,
  company_rejection_reason text,
  matching_id uuid,
  matching_score numeric,
  upload_type boolean,
  CONSTRAINT candidatures_pkey PRIMARY KEY (id),
  CONSTRAINT candidatures_ao_id_fkey FOREIGN KEY (ao_id) REFERENCES public.aos(id),
  CONSTRAINT candidatures_expert_id_fkey FOREIGN KEY (expert_id) REFERENCES public.experts(id),
  CONSTRAINT candidatures_matching_id_fkey FOREIGN KEY (matching_id) REFERENCES public.matchings(id)
);
CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  profile_completed boolean NOT NULL DEFAULT false,
  name text,
  siren text,
  representative_first_name text,
  representative_last_name text,
  phone_number text,
  description text,
  website text,
  logo_url text,
  address text,
  city text,
  postal_code text,
  country text,
  profile_picture_url text DEFAULT 'https://storage.googleapis.com/hostinger-horizons-assets-prod/49b203ed-7069-4103-a7af-8f66310d10ce/177224a731ea91295ac50da4ce33c187.jpg'::text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone,
  representative_position text,
  CONSTRAINT companies_pkey PRIMARY KEY (id),
  CONSTRAINT companies_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.email_recommendations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  expert_id uuid NOT NULL,
  ao_id uuid,
  matching_id uuid,
  to_email text NOT NULL,
  subject text,
  body_preview text,
  provider text,
  provider_message_id text,
  event USER-DEFINED NOT NULL DEFAULT 'queued'::email_event_enum,
  occurred_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT email_recommendations_pkey PRIMARY KEY (id),
  CONSTRAINT email_recommendations_ao_id_fkey FOREIGN KEY (ao_id) REFERENCES public.aos(id),
  CONSTRAINT email_recommendations_expert_id_fkey FOREIGN KEY (expert_id) REFERENCES public.experts(id),
  CONSTRAINT email_recommendations_matching_id_fkey FOREIGN KEY (matching_id) REFERENCES public.matchings(id)
);
CREATE TABLE public.expert_cv_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  expert_id uuid NOT NULL,
  cv_url text,
  source USER-DEFINED NOT NULL DEFAULT 'upload'::cv_source_enum,
  is_active boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT expert_cv_versions_pkey PRIMARY KEY (id),
  CONSTRAINT expert_cv_versions_expert_id_fkey FOREIGN KEY (expert_id) REFERENCES public.experts(id)
);
CREATE TABLE public.experts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  profile_completed boolean NOT NULL DEFAULT false,
  first_name text,
  last_name text,
  phone_number text,
  title text,
  bio text,
  years_of_experience integer,
  availability text,
  daily_rate integer,
  skills ARRAY DEFAULT '{}'::text[],
  portfolio_links ARRAY DEFAULT '{}'::text[],
  cv_url text,
  profile_picture_url text DEFAULT 'https://storage.googleapis.com/hostinger-horizons-assets-prod/49b203ed-7069-4103-a7af-8f66310d10ce/37d96bc58d836348dbe29547a264b0f5.jpg'::text,
  other_documents_url ARRAY,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone,
  linkedin_url text,
  CONSTRAINT experts_pkey PRIMARY KEY (id),
  CONSTRAINT experts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.interviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  candidature_id uuid NOT NULL,
  company_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'PENDING'::interview_status_enum,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  scheduled_times jsonb,
  confirmed_time timestamp with time zone,
  expert_rejection_reason text,
  expert_proposed_time timestamp with time zone,
  meeting_link text,
  CONSTRAINT interviews_pkey PRIMARY KEY (id),
  CONSTRAINT interviews_candidature_id_fkey FOREIGN KEY (candidature_id) REFERENCES public.candidatures(id),
  CONSTRAINT interviews_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.matchings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  expert_id uuid NOT NULL,
  ao_id uuid NOT NULL,
  cv_version_id uuid,
  source USER-DEFINED NOT NULL,
  score numeric NOT NULL CHECK (score >= 0::numeric AND score <= 100::numeric),
  reasons ARRAY DEFAULT '{}'::text[],
  features jsonb,
  threshold numeric,
  email_sent boolean NOT NULL DEFAULT false,
  email_message_id text,
  is_current boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  candidature boolean,
  CONSTRAINT matchings_pkey PRIMARY KEY (id),
  CONSTRAINT matchings_ao_id_fkey FOREIGN KEY (ao_id) REFERENCES public.aos(id),
  CONSTRAINT matchings_cv_version_id_fkey FOREIGN KEY (cv_version_id) REFERENCES public.expert_cv_versions(id),
  CONSTRAINT matchings_expert_id_fkey FOREIGN KEY (expert_id) REFERENCES public.experts(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  type text NOT NULL,
  message text NOT NULL,
  is_read boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  ao_id uuid,
  candidature_id uuid,
  related_user_id uuid,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_ao_id_fkey FOREIGN KEY (ao_id) REFERENCES public.aos(id),
  CONSTRAINT notifications_candidature_id_fkey FOREIGN KEY (candidature_id) REFERENCES public.candidatures(id),
  CONSTRAINT notifications_related_user_id_fkey FOREIGN KEY (related_user_id) REFERENCES public.users(id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.shared_documents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  recipient_user_id uuid,
  uploader_user_id uuid,
  file_path text NOT NULL,
  file_name text NOT NULL,
  candidature_id uuid,
  ao_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone,
  CONSTRAINT shared_documents_pkey PRIMARY KEY (id),
  CONSTRAINT fk_ao FOREIGN KEY (ao_id) REFERENCES public.aos(id),
  CONSTRAINT fk_candidature FOREIGN KEY (candidature_id) REFERENCES public.candidatures(id),
  CONSTRAINT fk_recipient_user FOREIGN KEY (recipient_user_id) REFERENCES public.users(id),
  CONSTRAINT fk_uploader_user FOREIGN KEY (uploader_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.system_settings (
  key text NOT NULL,
  value text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT system_settings_pkey PRIMARY KEY (key)
);
CREATE TABLE public.testimonials (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  author_user_id uuid,
  author_type text NOT NULL,
  content text NOT NULL,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  status USER-DEFINED NOT NULL DEFAULT 'pending'::testimonial_status_enum,
  approved_by_admin_id uuid,
  approved_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  is_featured boolean NOT NULL DEFAULT false,
  is_homepage_featured boolean DEFAULT false,
  author_name text,
  author_title text,
  author_avatar_url text,
  CONSTRAINT testimonials_pkey PRIMARY KEY (id),
  CONSTRAINT testimonials_approved_by_admin_id_fkey FOREIGN KEY (approved_by_admin_id) REFERENCES public.admins(id),
  CONSTRAINT testimonials_author_user_id_fkey FOREIGN KEY (author_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  email text UNIQUE,
  role text,
  display_name text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  avatar_url text,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);